apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    name: monitoring
    managed-by: libraryapp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'libraryapp'
        environment: 'production'

    rule_files:
      - "alert_rules.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets: ['alertmanager:9093']

    scrape_configs:
      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # LibraryApp Services
      - job_name: 'libraryapp-auth'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: ['production', 'staging']
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: libraryapp-auth
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: $1:8080
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: environment

      - job_name: 'libraryapp-book'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: ['production', 'staging']
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: libraryapp-book
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: $1:8080
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: environment

      - job_name: 'libraryapp-member'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: ['production', 'staging']
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: libraryapp-member
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: $1:8080
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: environment

      - job_name: 'libraryapp-gateway'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: ['production', 'staging']
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: libraryapp-gateway
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: $1:8080
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: environment

  alert_rules.yml: |
    groups:
      - name: libraryapp.rules
        rules:
          # High Error Rate Alert
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
            for: 5m
            labels:
              severity: warning
              service: "{{ $labels.app }}"
            annotations:
              summary: "High error rate detected"
              description: "Service {{ $labels.app }} has error rate above 5% for more than 5 minutes"

          # High Response Time Alert
          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
            for: 10m
            labels:
              severity: warning
              service: "{{ $labels.app }}"
            annotations:
              summary: "High response time detected"
              description: "Service {{ $labels.app }} 95th percentile response time is above 2 seconds"

          # Service Down Alert
          - alert: ServiceDown
            expr: up == 0
            for: 2m
            labels:
              severity: critical
              service: "{{ $labels.job }}"
            annotations:
              summary: "Service is down"
              description: "Service {{ $labels.job }} has been down for more than 2 minutes"

          # High CPU Usage Alert
          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total[5m]) > 0.8
            for: 15m
            labels:
              severity: warning
              service: "{{ $labels.pod }}"
            annotations:
              summary: "High CPU usage detected"
              description: "Pod {{ $labels.pod }} has CPU usage above 80% for more than 15 minutes"

          # High Memory Usage Alert
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes / container_spec_memory_limit_bytes > 0.85
            for: 15m
            labels:
              severity: warning
              service: "{{ $labels.pod }}"
            annotations:
              summary: "High memory usage detected"
              description: "Pod {{ $labels.pod }} has memory usage above 85% for more than 15 minutes"

          # Pod Restart Alert
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: warning
              service: "{{ $labels.pod }}"
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.pod }} has restarted {{ $value }} times in the last 15 minutes"

          # Database Connection Alert
          - alert: DatabaseConnectionFailure
            expr: increase(database_connection_errors_total[5m]) > 5
            for: 2m
            labels:
              severity: critical
              service: "{{ $labels.app }}"
            annotations:
              summary: "Database connection failures detected"
              description: "Service {{ $labels.app }} has had {{ $value }} database connection failures in the last 5 minutes"